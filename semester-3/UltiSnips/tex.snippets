#────────────#
# Env Detect #
#────────────#
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
endglobal

#──────────#
# Comments #
#──────────#
snippet lcmt "Latex Comment" w
`!p snip.rv = '%' + '─' * (len(t[1]) + 2) + '%'`
% $1 %
`!p snip.rv = '%' + '─' * (len(t[1]) + 2) + '%'`
$0
endsnippet

snippet %% "%" iA
\%
endsnippet

#─────────────────#
# Basic Structure #
#─────────────────#
snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet ssb "sub sub section" w
\subsubsection${2:*}{${1:sub sub title}}%
\label{subsub:${3:${1/\W+/-/g}}}
$0
endsnippet

snippet sb "sub sub section" w
\subsubsection${2:*}{${1:${VISUAL}}}%
\label{subsub:${3:${1/\W+/-/g}}}
$0
endsnippet

# snippet template "Basic template" b
# \documentclass[a4paper]{article}
# 
# \usepackage[utf8]{ctex}
# \usepackage[T1]{fontenc}
# \usepackage{textcomp}
# \usepackage[dutch]{babel}
# \usepackage{amsmath, amssymb}
# 
# 
# % figure support
# \usepackage{import}
# \usepackage{xifthen}
# \pdfminorversion=7
# \usepackage{pdfpages}
# \usepackage{transparent}
# \newcommand{\incfig}[1]{%
# 	\def\svgwidth{\columnwidth}
# 	\import{./figures/}{#1.pdf_tex}
# }
# 
# \pdfsuppresswarningpagegroup=1
# 
# \begin{document}
# 	$0
# \end{document}
# endsnippet

snippet tplt "template" b
%─────────────────%
% Header Settings %
%─────────────────%
${1:\def\lecturer{${2:lecturer}}}
${3:\def\noter{${4:noter}}}
\def\className{${5:className}}
\def\term{${6:term}}
\input{${7:~/Notebook/header}}

%──────────%
% Document %
%──────────%
\begin{document}
\maketitle
\tableofcontents
$0
\end{document}
endsnippet

#──────────#
# Brackets #
#──────────#
snippet {} "{}" iA
{$1}$0
endsnippet

snippet （） "（）" iA
（$1）$0
endsnippet

snippet '' "''" iA
'$1'$0
endsnippet

snippet "" "" iA
"$1"$0
endsnippet

snippet “” "“”" iA
“$1”$0
endsnippet

snippet ‘’ "‘’" iA
‘$1’$0
endsnippet

snippet () "()" iA
($1)$0
endsnippet

snippet 《》 "《》" iA
《$1》$0
endsnippet

snippet [] "[]" iA
[$1]$0
endsnippet

#─────────────#
# Auto Script #
#─────────────#
priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

#────────────────────#
# Environment Syntax #
#────────────────────#
snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet


snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix}
$1\\\\
\end{pmatrix}
$0
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix}
$1\\\\
\end{bmatrix}
$0
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:${2/\W+/-/g}}}
	\begin{tabular}{${5:c}}
	\toprule
	$6${5/((?<=.)c|l|r)|./(?1: & )/g}\\\\
	\midrule
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}\\\\
	\bottomrule
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet plot "Plot" w
\begin{figure}[${1:htbp}]
	\centering
	\caption{${2:plot}}
	\label{${3:$2}}
	\begin{tikzpicture}
		\begin{axis}[
			xmin=${4:-10}, xmax=${5:10},
			ymin=${6:-10}, ymax=${7:10},
			axis lines=middle,
		]
			\addplot[domain=$10:$11, samples=${8:100}]{$9};
		\end{axis}
	\end{tikzpicture}
\end{figure}
endsnippet

snippet gdw "Geometry Draws" w
\begin{center}
	\begin{tikzpicture}
		$1
	\end{tikzpicture}
\end{center}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet exmp "Example" wA
\begin{eg}
	$1
\end{eg}
$0
endsnippet

snippet ntt "Notation" wA
\begin{notation}
	$1
\end{notation}
$0
endsnippet

snippet defi "Definition" w
\begin{defi}
	$1
\end{defi}
$0
endsnippet

snippet qst "Question" wA
\begin{question}
	$1
\end{question}
$0
endsnippet

snippet axi "Axiom" w
\begin{axiom}
	$1
\end{axiom}
$0
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

context "math()"
snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

#───────────────#
# Tikz Settings #
#───────────────#
snippet tnn "Tikz node" w
\node [${5:settings}] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1:context}$};
$0
endsnippet

snippet gcr "Geometry Circle" w
\draw [${3:settings}] (${2:point}) circle [radius=$1] node at($2) {$${4:context}$};
$0
endsnippet

snippet gln "Geometry Line" w
\draw [${3:settings}] (${1:start})--(${2:end});
$0
endsnippet

snippet grt "Geometry Rectangle" w
\draw [${5:settings}] (${1:start}) rectangle (${2:end}) node at(${4:point}) {$${3:context}$};
$0
endsnippet

#────────────────#
# Math Operators #
#────────────────#
context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

priority 10
context "math()"
snippet "lbar" "Long bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])lbar" "Long bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" ri
\bar{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" ri
\bar{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "bm" "Bold Math" ri
\bm{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bm" "Bold Math" ri
\bm{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

snippet 、、 "RF" iA
\\\\
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet mt "Math" w
$${1:${VISUAL}}$$0
endsnippet

snippet dm "Math" wA
\[
	${1:${VISUAL}}
.\] $0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "Not equals" iA
\neq 
endsnippet

snippet ~= "Approximately equals" iA
\approx 
endsnippet

snippet +- "Plus or minus" iA
\pm
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{i=${1:1}}^{${2:n}} ${3:f(i)}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\R_0^+
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} \mathrm{d}$0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet <! "normal" iA
\triangleleft 
endsnippet

snippet <> "hokje" iA
\diamond 
endsnippet

#─────────────#
# Math Symbol #
#─────────────#
snippet ooo "\infty" iA
\infty
endsnippet

snippet nth "\varnothing" wA
\varnothing
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context "math()"
snippet EE "Exist" iA
\exists 
endsnippet

context "math()"
snippet AA "For All" iA
\forall 
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nbl "nabla" iA
\nabla 
endsnippet

snippet || "mid" iA
\mid 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet Nn "n" iA
\N
endsnippet

snippet NN "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}}${3:^{${4:n}}}$0
endsnippet

snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}}${3:^{${4:n}}}$0
endsnippet

snippet CC "Conbine" iA
\text{C}_{${1:n}}^{${2:m}}$0
endsnippet

snippet PP "Permute" iA
P_{${1:n}}^{${2:m}}$0
endsnippet

# snippet OO "emptyset" iA
# \O
# endsnippet

snippet RR "real" iA
\mathbb{R}
endsnippet

snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

snippet FF "F" iA
\mathscr{F}
endsnippet

snippet tbf "\textbf{}" wA
\textbf{$1}$0
endsnippet

snippet bf "\textbf{}" w
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet dssp "Display style" wA
\displaystyle{$1}$0
endsnippet

snippet dsp "Display style" w
\displaystyle{${1:${VISUAL}}}$0
endsnippet

snippet mtr "multirow"
\multirow{${VISUAL}}$0
endsnippet

snippet mtc "multicolumn"
\multicolumn{${1:2}}{c}{${VISUAL}}$0
endsnippet

# vim:ft=snippets
